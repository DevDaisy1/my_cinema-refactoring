import React, { useEffect, useState } from "react";
import axios from "axios";
import * as userApi from "./api/user";

interface Props {
  token: string; // –í–∞—à –ø—Ä–æ–ø—É—Å–∫ –≤ –º–∏—Ä –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞
}

interface PurchaseResponse {
  id: string;
  clientId: string;
  ticketIds: string[];
  totalCents: number; // –°—É–º–º–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–π –≤–∞—à –∫–æ—à–µ–ª–µ–∫ –ø–ª–∞—á–µ—Ç
  status: string;
  createdAt: string;
  filmId: string;
  seats: { row: number; number: number; priceCents: number }[];
}

interface ReviewForm {
  rating: number; // –û—Ç "—É–∂–∞—Å–Ω–æ" –¥–æ "–∑–∞ —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –∏ –ª—É—á—à–µ"
  text: string; // –í–∞—à–µ –º–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç
}

export default function UserProfilePage({ token }: Props) {
  const [user, setUser] = useState<userApi.User | null>(null);
  const [form, setForm] = useState({
    firstName: "",
    lastName: "",
    email: "",
    gender: "FEMALE", // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∂–µ–Ω—â–∏–Ω—ã - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –≤—Ä–µ—Ç!
    age: 21, // –í–µ—á–Ω–∞—è –º–æ–ª–æ–¥–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
  });
  const [editing, setEditing] = useState(false); // –†–µ–∂–∏–º "–æ–π, —è –æ—à–∏–±—Å—è"

  const [purchases, setPurchases] = useState<PurchaseResponse[]>([]); // –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≤–∞—à–µ–π —Ä–∞—Å—Ç–æ—á–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const [filmTitles, setFilmTitles] = useState<Record<string, string>>({});
  const [reviewForms, setReviewForms] = useState<Record<string, ReviewForm>>({}); // –ù–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —à–µ–¥–µ–≤—Ä—ã –∫—Ä–∏—Ç–∏–∫–∏

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "–¢–∞–∫ –≤–æ—Ç –∫—Ç–æ —è —Ç–∞–∫–æ–π!"
  useEffect(() => {
    async function fetchUser() {
      try {
        const currentUser = await userApi.getCurrentUser(token);
        setUser(currentUser);
        setForm({
          firstName: currentUser.firstName,
          lastName: currentUser.lastName,
          email: currentUser.email,
          gender: currentUser.gender === "FEMALE" ? "–ñ–µ–Ω—Å–∫–∏–π" : "–ú—É–∂—Å–∫–æ–π",
          age: currentUser.age,
        });
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
        alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"); // –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ "–≤—Å–µ —Å–ª–æ–º–∞–ª–æ—Å—å"
      }
    }
    fetchUser();
  }, [token]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–∫—É–ø–∫–∏: –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω—å–≥–∞—Ö
  useEffect(() => {
    async function fetchPurchases() {
      try {
        const res = await axios.get("http://91.142.94.183:8080/purchases", {
          headers: { Authorization: `Bearer ${token}` },
          params: { page: 0, size: 20 }, // 20 –ø–æ–∫—É–ø–æ–∫? –û–ø—Ç–∏–º–∏—Å—Ç!
        });

        const mapped: PurchaseResponse[] = res.data.data.map((p: any) => ({
          id: p.id,
          clientId: p.clientId,
          ticketIds: p.ticketIds,
          totalCents: p.totalCents,
          status: p.status,
          createdAt: p.createdAt,
          filmId: p.filmId,
          seats: p.seats || [], // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        }));

        setPurchases(mapped);

        const uniqueIds = [...new Set(mapped.map((p) => p.filmId))];
        const filmData: Record<string, string> = {};

        await Promise.all(
          uniqueIds.map(async (id) => {
            try {
              const filmRes = await axios.get(`http://91.142.94.183:8080/films/${id}`);
              filmData[id] = filmRes.data.title;
            } catch {
              filmData[id] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∏–ª—å–º"; // –§–∏–ª—å–º-–ø—Ä–∏–∑—Ä–∞–∫
            }
          })
        );

        setFilmTitles(filmData);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫—É–ø–æ–∫:", err);
      }
    }

    fetchPurchases();
  }, [token]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: name === "age" ? Number(value) : value });
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å: —Ç–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –∑–Ω–∞–µ—Ç –æ –≤–∞—Å –≤—Å–µ
  const handleSaveProfile = async () => {
    if (!user) return;
    try {
      const updated = await userApi.updateCurrentUser(token, {
        firstName: form.firstName,
        lastName: form.lastName,
        email: form.email,
        age: form.age,
        gender: form.gender === "–ñ–µ–Ω—Å–∫–∏–π" ? "FEMALE" : "MALE",
      });
      setUser(updated);
      setEditing(false);
      alert("–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω!"); // –ú–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", err);
      alert("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"); // –ò–ª–∏ –Ω–µ –æ—á–µ–Ω—å
    }
  };

  const handleReviewChange = (filmId: string, field: "rating" | "text", value: string | number) => {
    setReviewForms((prev) => ({
      ...prev,
      [filmId]: { ...prev[filmId], [field]: value },
    }));
  };

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤: –≤–∞—à –≥–æ–ª–æ—Å –≤–∞–∂–µ–Ω (–Ω–µ—Ç)
  const handleSubmitReview = async (filmId: string) => {
    const review = reviewForms[filmId];
    if (!review || !review.rating || !review.text) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –∏ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞");

    try {
      await axios.post(
        `http://91.142.94.183:8080/films/${filmId}/reviews`,
        { rating: review.rating, text: review.text },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert("–û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!"); // –ï—â–µ –æ–¥–Ω–∞ –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–±–µ–¥–∞
      setReviewForms((prev) => ({ ...prev, [filmId]: { rating: 0, text: "" } }));
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"); // –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–∫–∞–∑–∞–ª "–Ω–µ—Ç"
    }
  };

  if (!user) return <div className="text-center text-light mt-5">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</div>;

  return (
    <div className="min-vh-100 bg-dark text-light p-4">
      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: –∑–¥–µ—Å—å –∂–∏–≤—É—Ç –≤–∞—à–∏ —Å–µ–∫—Ä–µ—Ç—ã */}
      <div className="card text-dark mb-4">
        <div className="card-body">
          <h2 className="card-title text-primary mb-3">–ü—Ä–æ—Ñ–∏–ª—å</h2>
          {editing ? (
            <>
              <input className="form-control mb-2" name="firstName" value={form.firstName} onChange={handleChange} placeholder="–ò–º—è" />
              <input className="form-control mb-2" name="lastName" value={form.lastName} onChange={handleChange} placeholder="–§–∞–º–∏–ª–∏—è" />
              <input className="form-control mb-2" name="email" value={form.email} onChange={handleChange} placeholder="Email" />
              <select className="form-control mb-2" name="gender" value={form.gender} onChange={handleChange}>
                <option>–ñ–µ–Ω—Å–∫–∏–π</option>
                <option>–ú—É–∂—Å–∫–æ–π</option>
              </select>
              <input className="form-control mb-2" name="age" type="number" value={form.age} onChange={handleChange} placeholder="–í–æ–∑—Ä–∞—Å—Ç" />
              <button className="btn btn-success me-2" onClick={handleSaveProfile}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
              <button className="btn btn-secondary" onClick={() => setEditing(false)}>–û—Ç–º–µ–Ω–∞</button>
            </>
          ) : (
            <>
              <p className="text-light">–ò–º—è: {form.firstName}</p>
              <p className="text-light">–§–∞–º–∏–ª–∏—è: {form.lastName}</p>
              <p className="text-light">Email: {form.email}</p>
              <p className="text-light">–ü–æ–ª: {form.gender}</p>
              <p className="text-light">–í–æ–∑—Ä–∞—Å—Ç: {form.age}</p>
              <button className="btn btn-primary" onClick={() => setEditing(true)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            </>
          )}
        </div>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫: –≥–∞–ª–µ—Ä–µ—è –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π */}
      <div className="mb-4">
        <h2 className="text-primary mb-3">–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫</h2>
        {purchases.length === 0 ? (
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫ üéüÔ∏è</p> // –ì—Ä—É—Å—Ç–Ω—ã–π —Å–º–∞–π–ª–∏–∫ –ø—É—Å—Ç–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
        ) : (
          purchases.map((p: PurchaseResponse) => (
            <div key={p.id} className="card text-dark mb-3">
              <div className="card-body text-light">
                <strong>{filmTitles[p.filmId as string] || "–ó–∞–≥—Ä—É–∑–∫–∞..."}</strong>
                <br />
                –ò—Ç–æ–≥–æ: {p.totalCents}‚ÇΩ {/* –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–º */}
                <br />
                –°—Ç–∞—Ç—É—Å: {p.status} {/* –ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ "—É—Å–ø–µ—à–Ω–æ" */}

                <div className="mt-2">
                  <h6>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤:</h6>
                  <input
                    type="number"
                    min={0}
                    max={5}
                    className="form-control mb-1"
                    placeholder="–†–µ–π—Ç–∏–Ω–≥ 0‚Äì5"
                    value={reviewForms[p.filmId as string]?.rating || ""}
                    onChange={(e) => handleReviewChange(p.filmId, "rating", Number(e.target.value))}
                  />
                  <input
                    type="text"
                    className="form-control mb-1"
                    placeholder="–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞"
                    value={reviewForms[p.filmId as string]?.text || ""}
                    onChange={(e) => handleReviewChange(p.filmId, "text", e.target.value)}
                  />
                  <button className="btn btn-success" onClick={() => handleSubmitReview(p.filmId)}>
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                  </button>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  );
}